[
    {
        "instance_id": "tokio-rs__tokio-2457",
        "model_name_or_path": "qwen2.5:32b-instruct-fp8",
        "model_patch": "diff --git a/tokio/src/runtime/builder.rs b/tokio/src/runtime/builder.rs\nindex 56fb898a..18784943 100644\n--- a/tokio/src/runtime/builder.rs\n+++ b/tokio/src/runtime/builder.rs\n@@ -37,6 +37,9 @@ use std::sync::Arc;\n ///     // use runtime ...\n /// }\n /// ```\n+use std::cmp;\n+use num_cpus;\n+\n pub struct Builder {\n     /// The task execution model to use.\n     kind: Kind,\n@@ -68,6 +71,14 @@ pub struct Builder {\n     pub(super) before_stop: Option<Callback>,\n }\n \n+impl Builder {\n+    fn apply_defaults(&mut self) {\n+        if self.core_threads.is_none() {\n+            self.core_threads = Some(cmp::min(self.max_threads, num_cpus::get()));\n+        }\n+    }\n+}\n+\n #[derive(Debug, Clone, Copy)]\n enum Kind {\n     Shell,\n"
    },
    {
        "instance_id": "tokio-rs__tokio-4430",
        "model_name_or_path": "qwen2.5:32b-instruct-fp8",
        "model_patch": "diff --git a/tokio/src/runtime/task/harness.rs b/tokio/src/runtime/task/harness.rs\nindex 0996e523..4d2cfd44 100644\n--- a/tokio/src/runtime/task/harness.rs\n+++ b/tokio/src/runtime/task/harness.rs\n@@ -188,7 +188,8 @@ where\n         self.drop_reference();\n \n         if let Some(panic) = maybe_panic {\n-            panic::resume_unwind(panic);\n+            // Log the panic or simply ignore it\n+            eprintln!(\"Caught panic while dropping JoinHandle output: {:?}\", panic);\n         }\n     }\n \n"
    }
]